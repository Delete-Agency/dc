{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///src/D:/Delete_dc/dc/src/dc-dom.ts","webpack:///src/D:/Delete_dc/dc/src/utils.ts","webpack:///src/D:/Delete_dc/dc/src/dc-base-component.ts","webpack:///src/D:/Delete_dc/dc/src/dc-factory.ts","webpack:///src/D:/Delete_dc/dc/src/dc-async.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","scopedQuerySelectorAll","element","selector","Array","slice","querySelectorAll","namespace","refAttribute","refSelector","componentSelector","getNamespacedAnchorAttribute","nestedComponents","refs","filter","ref","some","nested","contains","forEach","refValue","getAttribute","_refValue","replace","word","charAt","toUpperCase","arrayParseResult","match","isObject","test","push","requiredRefs","_listenersList","_checkRequiredRefs","Error","addListener","elem","eventName","eventCallback","addEventListener","_removeAllListeners","listener","removeEventListener","destroy","onDestroy","freeze","this","options","attribute","result","attributeValue","JSON","parse","error","console","getElementOptions","dcFactory","_registeredComponents","init","document","documentElement","withLazy","rComponent","_initComponent","components","instance","state","_getComponent","_element","find","_getState","component","_setState","elements","matches","msMatchesSelector","findElementsForInit","_Class","_initComponentOnElement","e","checkElement","hasAttribute","parentElement","isElementWithinLazyParent","requestAnimationFrame","_createComponent","message","log","ComponentClass","dcAsync","importFunction","then"],"mappings":"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","file":"dc.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { getCamelCaseString } from './utils';\n\nconst DC_NAMESPACE = 'data-dc';\nconst DC_NAMESPACED_ATTRIBUTE_REFERENCE = 'ref';\nconst DC_NAMESPACED_ATTRIBUTE_LAZY = 'lazy';\n\nconst matches = (root: HTMLElement, selector: string): boolean => {\n    // add support of the matches in IE\n    // @ts-ignore\n    return root.matches ? root.matches(selector) : root.msMatchesSelector(selector);\n};\n\n/**\n *\n * @param {HTMLElement} element\n * @param {string} selector\n * @return {HTMLElement[]}\n */\n\nconst scopedQuerySelectorAll = (element: HTMLElement, selector: string): HTMLElement[] => {\n    return Array.prototype.slice.call(element.querySelectorAll(selector));\n};\n\n/**\n * @param {HTMLElement} root!\n * @param {string} namespace\n * @param {?string|Function} selector\n * @return {Array}\n * @throws Error\n */\nconst findElementsForInit = (\n    root: HTMLElement,\n    namespace: string,\n    selector?: string | Function\n): HTMLElement[] => {\n    // by default we use namespace\n    if (!selector) {\n        selector = `[${getNamespacedAnchorAttribute(namespace)}]`;\n    }\n\n    let elements = [];\n    if (typeof selector === 'string') {\n        elements = scopedQuerySelectorAll(root, selector);\n        if (matches(root, selector)) {\n            elements.push(root);\n        }\n    } else if (typeof selector === 'function') {\n        elements = selector(root);\n    } else {\n        throw new Error(\"Unknown selector's type\");\n    }\n\n    return elements;\n};\n\n/**\n * @param {HTMLElement} element\n * @return {boolean}\n */\nconst isElementWithinLazyParent = (element: HTMLElement): boolean => {\n    let checkElement: HTMLElement | null = element;\n    const attribute = `[${DC_NAMESPACE}-${DC_NAMESPACED_ATTRIBUTE_LAZY}]`;\n    while (checkElement) {\n        if (checkElement.hasAttribute(attribute)) {\n            return true;\n        }\n        checkElement = checkElement.parentElement;\n    }\n\n    return false;\n};\n\n/**\n * @param {HTMLElement} element\n * @param {string} namespace\n * @return {ReferencesCollection}\n */\n\ninterface ReferencesCollection {\n    [key: string]: HTMLElement | HTMLElement[] | {\n        [_key: string]: HTMLElement\n    };\n}\n\nconst getElementRefs = (element: HTMLElement, namespace: string): ReferencesCollection => {\n    const refAttribute = `${DC_NAMESPACE}-${namespace}-${DC_NAMESPACED_ATTRIBUTE_REFERENCE}`;\n    const refSelector = `[${refAttribute}]`;\n    const componentSelector = `[${getNamespacedAnchorAttribute(namespace)}]`;\n    const nestedComponents = scopedQuerySelectorAll(element, componentSelector);\n\n    const refs: ReferencesCollection = {};\n    scopedQuerySelectorAll(element, refSelector)\n        ?.filter((ref) => !nestedComponents.some((nested) => nested.contains(ref)))\n        ?.forEach((ref) => {\n            let refValue = ref.getAttribute(refAttribute);\n            if (refValue !== null) {\n                let _refValue = getCamelCaseString(refValue);\n                const arrayRegexp = /(.+)\\[(.*)\\]/;\n                const arrayParseResult = _refValue.match(arrayRegexp);\n                if (arrayParseResult !== null) {\n                    _refValue = arrayParseResult[1];\n                    const key = arrayParseResult[2];\n                    const isObject = (key !== '') && (!/^\\d+$/.test(key));\n                    if (!(_refValue in refs)) {\n                        refs[_refValue] = isObject ? {} : [];\n                    }\n                    if (isObject) {\n                        refs[_refValue] = Object.assign(refs[_refValue], { [key]: ref })\n                    } else {\n                        (refs[_refValue] as HTMLElement[]).push(ref);\n                    }\n                } else {\n                    refs[_refValue] = ref;\n                }\n            }\n        });\n\n    return refs;\n};\n\n/**\n * @param {HTMLElement} element\n * @param {string} namespace\n * @return {?Object}\n */\n\nconst getElementOptions = (element: HTMLElement, namespace: string) => {\n    const attribute = getNamespacedAnchorAttribute(namespace);\n    let result = {};\n    const attributeValue = element.getAttribute(attribute);\n    if (attributeValue) {\n        try {\n            result = JSON.parse(attributeValue);\n        } catch (error) {\n            console.error(`Unable to parse «${attribute}» attribute on element:`, element);\n            throw error;\n        }\n    }\n\n    return result;\n};\n\nconst getNamespacedAnchorAttribute = (namespace: string): string => {\n    return `${DC_NAMESPACE}-${namespace}`;\n};\n\nexport {\n    ReferencesCollection,\n    scopedQuerySelectorAll,\n    getElementRefs,\n    findElementsForInit,\n    isElementWithinLazyParent,\n    matches,\n    getElementOptions,\n};\n","/**\r\n * Return sting in camelCase notation, e.g. some-name becomes someName\r\n * @param {string} str\r\n * @return {string}\r\n */\r\n\r\nconst getCamelCaseString = (str: string): string  => {\r\n    return str.replace(/-./g, word => word.charAt(1).toUpperCase());\r\n}\r\n\r\nexport {\r\n    getCamelCaseString,\r\n}\r\n","import {\r\n    getElementOptions,\r\n    getElementRefs, ReferencesCollection,\r\n} from './dc-dom';\r\n\r\n/**\r\n * @typedef {Object.<string, {(HTMLElement|HTMLElement[]|Object.<string, HTMLElement>)}>} ReferencesCollection\r\n */\r\n\r\n/**\r\n * Interface for classes that can be initialized by factory.\r\n * @interface Component\r\n*/\r\n/**\r\n * Init Component\r\n * @method\r\n * @name Component#init\r\n *\r\n */\r\n/**\r\n * Destroy Component\r\n * @method\r\n * @name Component#destroy\r\n *\r\n */\r\n/**\r\n * @method\r\n * @name Component#getElement\r\n * @return {HTMLElement} element\r\n */\r\n/**\r\n * @method\r\n * @name Component#getNamespace\r\n * @static\r\n */\r\n\r\n\r\ninterface DcListener {\r\n    elem: HTMLElement;\r\n    eventName: string;\r\n    eventCallback: CallableFunction;\r\n}\r\n\r\n/**\r\n * Base component.\r\n * @class\r\n * @implements {DcBaseComponent}\r\n */\r\n\r\n\r\nclass DcBaseComponent {\r\n    public readonly element: HTMLElement;\r\n    private _listenersList: DcListener[] = [];\r\n    protected readonly options: object;\r\n    protected readonly refs: ReferencesCollection;\r\n    public static namespace: string = '';\r\n    public static requiredRefs: string[] = [];\r\n\r\n    public constructor(element: HTMLElement, namespace: string, requiredRefs: string[]) {\r\n        Object.freeze(this.addListener);\r\n        Object.freeze(this.destroy);\r\n        /**\r\n         * Root element of the component\r\n         * @type {HTMLElement}\r\n         */\r\n        this.element = element;\r\n\r\n        /**\r\n         * Store an object with any data/settings which is provided by backend side\r\n         * @type {Object}\r\n         */\r\n        this.options = getElementOptions(element, namespace);\r\n\r\n        /**\r\n         * @type {ReferencesCollection}\r\n         */\r\n        this.refs = getElementRefs(\r\n            element,\r\n            namespace,\r\n        );\r\n\r\n        this._checkRequiredRefs(requiredRefs, namespace);\r\n    }\r\n\r\n    private _checkRequiredRefs = (refs: string[], namespace: string): void => {\r\n        refs.forEach(name => {\r\n            if (!this.refs[name]) {\r\n                throw new Error(\r\n                    `required ref \"${name}\" is not founded in ${namespace}`\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    public init() {}\r\n\r\n    protected readonly addListener = (elem: HTMLElement, eventName: string, eventCallback: CallableFunction): void => {\r\n        elem.addEventListener(eventName, eventCallback as EventListener);\r\n        this._listenersList.push({\r\n            elem,\r\n            eventName,\r\n            eventCallback\r\n        });\r\n    }\r\n\r\n    private _removeAllListeners = (): void => {\r\n        this._listenersList.forEach(listener => {\r\n            const { elem, eventName, eventCallback } = listener;\r\n            elem.removeEventListener(eventName, eventCallback as EventListener);\r\n        });\r\n\r\n        this._listenersList = [];\r\n    }\r\n\r\n    public readonly destroy = (): void => {\r\n        this._removeAllListeners();\r\n        this.onDestroy();\r\n    }\r\n\r\n    protected onDestroy() {}\r\n}\r\n\r\nexport { DcBaseComponent };\r\n","import { findElementsForInit, isElementWithinLazyParent } from './dc-dom';\r\nimport { DcBaseComponent } from 'src/dc-base-component'\r\n\r\n/**\r\n * @typedef {string} ComponentState\r\n * */\r\n\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst STATE_NOT_INITED = 'not-inited';\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst STATE_INITIALIZING = 'initializing';\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst STATE_LAZY_WAITING = 'lazy-waiting';\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst STATE_CREATED = 'created';\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst STATE_ERROR = 'error';\r\n\r\ninterface StatedComponent {\r\n    element: HTMLElement;\r\n    instance: DcBaseComponent | undefined\r\n    state: string\r\n}\r\n\r\ninterface RegisteredComponent {\r\n    _Class: typeof DcBaseComponent;\r\n    selector: string | Function | undefined;\r\n    components: StatedComponent[]\r\n}\r\n\r\nclass DcFactory {\r\n    private _registeredComponents:  RegisteredComponent[] = [];\r\n\r\n    /**\r\n     *\r\n     * @param {typeof DcBaseComponent} ComponentClass\r\n     * @param {Function|string} selector that indicates how we should search that component elements\r\n     */\r\n    public register(ComponentClass: typeof DcBaseComponent, selector?: string | Function | undefined): void {\r\n        console.log(selector);\r\n        this._registeredComponents.push({\r\n            _Class: ComponentClass,\r\n            selector,\r\n            components: []\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Starts the factory on a given root: finds and creates all registered components within the root\r\n     * @param {HTMLElement} root\r\n     * @param {boolean} withLazy - Whether or not initialize component which marked as lazy\r\n     */\r\n    public init: (root?: HTMLElement, withLazy?: boolean) => void = (root = document.documentElement, withLazy = true) => {\r\n        this._registeredComponents.forEach((rComponent) => {\r\n            this._initComponent(root, rComponent, withLazy);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy all previously registered components within the passed element\r\n     * @param {HTMLElement} root\r\n     */\r\n    public destroy = (root: HTMLElement): void => {\r\n        this._registeredComponents.forEach((rComponent) => {\r\n            rComponent.components = rComponent.components.filter(({ element, instance, state }) => {\r\n                if (root.contains(element)) {\r\n                    if (state === STATE_CREATED && instance) instance.destroy();\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    private _getComponent = (_element: HTMLElement, rComponent: RegisteredComponent): StatedComponent | undefined =>\r\n        rComponent.components.find(({ element }) => element === _element);\r\n\r\n    private _getState = (element: HTMLElement, rComponent: RegisteredComponent): string => {\r\n        const component = this._getComponent(element, rComponent);\r\n        if (component) return component.state;\r\n        return STATE_NOT_INITED;\r\n    }\r\n\r\n    private _setState = (element: HTMLElement, rComponent: RegisteredComponent, state: string, instance?: DcBaseComponent | undefined): void => {\r\n        let component = this._getComponent(element, rComponent);\r\n\r\n        if (!component) {\r\n            component = { element, state, instance }\r\n            rComponent.components.push(component);\r\n        }\r\n        Object.assign(component, { state, instance })\r\n    }\r\n\r\n    private _initComponent = (root: HTMLElement, rComponent: RegisteredComponent, withLazy?: boolean): void => {\r\n        try {\r\n            const { _Class: { namespace }, selector } = rComponent;\r\n            findElementsForInit(root, namespace, selector).forEach((element) => {\r\n                this._initComponentOnElement(element, rComponent, withLazy);\r\n            });\r\n        } catch (e) {\r\n            // ignore current config error and move to the next one\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    private _initComponentOnElement = (element: HTMLElement, rComponent: RegisteredComponent, withLazy?: boolean): void => {\r\n        const { _Class } = rComponent;\r\n        const state = this._getState(element, rComponent);\r\n        switch (state) {\r\n            // ignore components which are already created or in the middle of that process\r\n            case STATE_CREATED:\r\n            case STATE_ERROR:\r\n            case STATE_INITIALIZING:\r\n                return;\r\n            case STATE_LAZY_WAITING:\r\n                if (!withLazy) {\r\n                    return;\r\n                }\r\n        }\r\n\r\n        // if component is lazy but we should not instantiate it according withLazy = false\r\n        // we need to mark this component and wait until withLazy = true\r\n        if (!withLazy && isElementWithinLazyParent(element)) {\r\n            this._setState(element, rComponent, STATE_LAZY_WAITING);\r\n            return;\r\n        }\r\n\r\n        // finally init component on element\r\n        this._setState(element, rComponent, STATE_INITIALIZING);\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                this._createComponent(element, rComponent);\r\n            } catch (error) {\r\n                this._setState(element, rComponent, STATE_ERROR);\r\n                console.error(`Component ${_Class.name} hasn't been created due to error: ${error.message}`, element);\r\n                console.error(error);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private _createComponent = (element: HTMLElement, rComponent: RegisteredComponent): void => {\r\n        const { _Class } = rComponent;\r\n        const instance = new _Class(element, _Class.namespace, _Class.requiredRefs);\r\n        console.log(instance);\r\n        instance.init();\r\n        this._setState(element, rComponent, STATE_CREATED, instance);\r\n    }\r\n}\r\n\r\n\r\nexport const dcFactory = new DcFactory();\r\n","import { DcBaseComponent } from \"./dc-base-component\";\r\n\r\n/**\r\n * This function returns wrapper componentClass\r\n *\r\n * @param {function} importFunction\r\n * @return {typeof DcBaseComponent} wrapper for component class\r\n */\r\nexport const dcAsync = (importFunction: CallableFunction): any => {\r\n    /**\r\n     * A wrapper class for async loading\r\n     * @class\r\n     * @implements {DcBaseComponent}\r\n     */\r\n    class AsyncWrapper {\r\n        public element: HTMLElement;\r\n        public instance: DcBaseComponent | undefined;\r\n\r\n        constructor(element: HTMLElement) {\r\n            this.element = element;\r\n        }\r\n\r\n        public init() {\r\n            importFunction()\r\n                .then(( _Class: typeof DcBaseComponent ) => {\r\n                    this.instance = new _Class(this.element, _Class.namespace, _Class.requiredRefs);\r\n                    this.instance.init();\r\n                })\r\n                .catch((error: any) => {\r\n                    console.error(\r\n                        `An error occurred while loading the component ${importFunction}`\r\n                    );\r\n                    console.error(error);\r\n                });\r\n        }\r\n\r\n        public destroy() {\r\n            if (this.instance) this.instance.destroy();\r\n        }\r\n    }\r\n\r\n    return AsyncWrapper;\r\n}\r\n"],"sourceRoot":""}