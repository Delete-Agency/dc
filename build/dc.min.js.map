{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./src/dc-dom.js","webpack:///./src/dc-base-component.js","webpack:///./src/dc-factory.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","utils","addToAssociativeCollection","collection","arrayParseResult","match","isObject","test","push","getCamelCaseString","str","replace","word","charAt","toUpperCase","checkForbiddenOverrides","superClass","instance","properties","constructor","forEach","Error","concat","getPrototypeOf","DC_NAMESPACE","DC_NAMESPACED_ATTRIBUTE_REFERENCE","DC_NAMESPACED_ATTRIBUTE_ID","getNamespacedAnchorAttribute","namespace","scopedQuerySelectorAll","element","selector","id","getNamespacedAttributeName","_toConsumableArray","querySelectorAll","getNamespacedAttributeValue","attribute","getAttribute","dc_dom","findElementsForInit","root","arguments","length","undefined","elements","getElementId","getElementOptions","result","attributeValue","JSON","parse","error","console","this","getElementAttributeAsObject","getElementRefs","refAttribute","refs","refValue","getParentId","childElement","findChildrenWithAttribute","DcBaseComponent","_classCallCheck","_isDestroyed","_listenersList","_id","dcDom","getNamespace","options","_checkRequiredRefs","getRequiredRefs","onInit","elem","eventName","eventCallback","addEventListener","listener","removeEventListener","_removeAllListeners","onDestroy","childNode","attributeName","childId","COMPONENT_STATE_INITIALIZING","COMPONENT_STATE_CREATED","dcFactory","DcFactory","dc_factory_classCallCheck","_registredComponents","_elementsComponents","WeakMap","_instances","componentClass","existedComponents","state","includes","componentsMap","Map","set","_this","document","body","_ref","_initComponent","_this2","_initComponentOnElement","e","_this3","_isComponentCreatedOnElement","_setComponentStateOnElement","setTimeout","_createComponentOnElement","_onComponentCreated","_onComponentCreationError","getElement","dc_factory_toConsumableArray","init","message","_getComponentStateOnElement","_this4","filter","contains","_destroyComponent","component","destroy","getChildComponents","__webpack_exports__","dc_base_component_DcBaseComponent","dc_factory"],"mappings":"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","file":"dc.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * This method will add the value to the collection based of the passed name\r\n * If the name has array format e.g. «some-name[]» value will be added as an item of the «some-name» array\r\n * If the name has object format e.g. «some-name[some-property]» value will be added as an item of the object «some-name» with key «some-property»\r\n *\r\n * @param {Object} collection\r\n * @param {string} name\r\n * @param value\r\n */\r\n// todo remove similar method from object helper with the same name\r\nfunction addToAssociativeCollection(collection, name, value) {\r\n    const arrayRegexp = /(.+)\\[(.*)\\]/;\r\n    const arrayParseResult = name.match(arrayRegexp);\r\n    if (arrayParseResult !== null) {\r\n        name = arrayParseResult[1];\r\n        const key = arrayParseResult[2];\r\n        const isObject = (key !== '') && (!/^\\d+$/.test(key));\r\n        if (!(name in collection)) {\r\n            collection[name] = isObject ? {} : [];\r\n        }\r\n        if (isObject) {\r\n            collection[name][key] = value;\r\n        } else {\r\n            collection[name].push(value);\r\n        }\r\n    } else {\r\n        collection[name] = value;\r\n    }\r\n}\r\n\r\n/**\r\n * Return sting in camelCase notation, e.g. some-name becomes someName\r\n * @param {string} str\r\n * @return {string}\r\n */\r\nfunction getCamelCaseString(str) {\r\n    return str.replace(/-./g, word => word.charAt(1).toUpperCase());\r\n}\r\n\r\nfunction checkForbiddenOverrides(superClass, instance, properties) {\r\n    let prototype = instance;\r\n\r\n    while (prototype.constructor !== superClass) {\r\n        properties.forEach(key => {\r\n            if (prototype.hasOwnProperty(key)) {\r\n                throw new Error(`You can't override ${superClass.name} property «${key}» inside ${prototype.constructor.name}`);\r\n            }\r\n        });\r\n\r\n        prototype = Object.getPrototypeOf(prototype);\r\n    }\r\n}\r\n\r\nexport default {\r\n    addToAssociativeCollection,\r\n    getCamelCaseString,\r\n    checkForbiddenOverrides\r\n};\r\n","import utils from './utils';\r\n\r\nconst DC_NAMESPACE = 'data-dc';\r\nconst DC_NAMESPACED_ATTRIBUTE_REFERENCE = 'ref';\r\nconst DC_NAMESPACED_ATTRIBUTE_ID = 'id';\r\n\r\nfunction getNamespacedAnchorAttribute(namespace) {\r\n    return `${DC_NAMESPACE}-${namespace}`\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} root\r\n * @param {string} namespace\r\n * @param {?string|Function} selector\r\n * @return {Array}\r\n * @throws Error\r\n */\r\nfunction findElementsForInit(root, namespace, selector = null) {\r\n    // by default we use namespace\r\n    if (selector === null) {\r\n        selector = `[${getNamespacedAnchorAttribute(namespace)}]`;\r\n    }\r\n\r\n    let elements = [];\r\n    if (typeof selector === 'string') {\r\n        elements = [...root.querySelectorAll(selector)];\r\n    } else if (typeof selector === 'function') {\r\n        elements = selector(root);\r\n    } else {\r\n        throw new Error('Unknown selector\\'s type');\r\n    }\r\n\r\n    return elements;\r\n}\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} namespace\r\n * @return {?string}\r\n */\r\nfunction getElementId(element, namespace) {\r\n    return getNamespacedAttributeValue(element, DC_NAMESPACED_ATTRIBUTE_ID, namespace);\r\n}\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} selector\r\n * @param {string }namespace\r\n * @param {string} id\r\n * @return {HTMLElement[]}\r\n */\r\nfunction scopedQuerySelectorAll(element, selector, namespace, id) {\r\n    if (id) {\r\n        selector += `[${getNamespacedAttributeName(DC_NAMESPACED_ATTRIBUTE_ID, namespace)}=\"${id}\"]`;\r\n    }\r\n    return [...element.querySelectorAll(selector)];\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @param {string} namespace\r\n * @return {Object}\r\n */\r\nfunction getElementOptions(element, namespace) {\r\n    return getElementAttributeAsObject(element, getNamespacedAnchorAttribute(namespace));\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @param {string} attribute\r\n * @return {?Object}\r\n */\r\nfunction getElementAttributeAsObject(element, attribute) {\r\n    let result = {};\r\n    const attributeValue = element.getAttribute(attribute);\r\n    if (attributeValue) {\r\n        try {\r\n            result = JSON.parse(attributeValue);\r\n        } catch (error) {\r\n            console.error(`Unable to parse «${attribute}» attribute on element:`, this.element);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} element\r\n * @param {string} namespace\r\n * @param {string} id\r\n * @return {ReferencesCollection}\r\n */\r\nfunction getElementRefs(element, namespace, id) {\r\n    const refAttribute = getNamespacedAttributeName(DC_NAMESPACED_ATTRIBUTE_REFERENCE, namespace);\r\n    const selector = `[${refAttribute}]`;\r\n\r\n    const refs = {};\r\n    const elements = scopedQuerySelectorAll(element, selector, namespace, id);\r\n    if (elements.length > 0) {\r\n        elements.forEach((element) => {\r\n            const refValue = element.getAttribute(refAttribute);\r\n            if (refValue !== null) {\r\n                utils.addToAssociativeCollection(\r\n                    refs,\r\n                    utils.getCamelCaseString(refValue),\r\n                    element\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    return refs;\r\n}\r\n\r\nfunction findChildrenWithAttribute(element, attribute, namespace, id) {\r\n    return scopedQuerySelectorAll(element, `[${getNamespacedAttributeName(attribute, namespace)}]`, namespace, id);\r\n}\r\n\r\nfunction getParentId(childElement, namespace) {\r\n    return getNamespacedAttributeValue(childElement, DC_NAMESPACED_ATTRIBUTE_ID, namespace);\r\n}\r\n\r\nfunction getNamespacedAttributeValue(element, attribute, namespace) {\r\n    return element.getAttribute(getNamespacedAttributeName(attribute, namespace));\r\n}\r\n\r\nfunction getNamespacedAttributeName(name, namespace) {\r\n    return `${DC_NAMESPACE}-${namespace}-${name}`;\r\n}\r\n\r\nexport default {\r\n    findElementsForInit,\r\n    getElementId,\r\n    getElementOptions,\r\n    getElementRefs,\r\n    getParentId,\r\n    getNamespacedAttributeValue,\r\n    findChildrenWithAttribute\r\n};\r\n","import dcDom from './dc-dom';\r\nimport utils from './utils';\r\n\r\n/**\r\n * @typedef {Object.<string, {(HTMLElement|HTMLElement[]|Object.<string, HTMLElement>)}>} ReferencesCollection\r\n */\r\n\r\nexport default class DcBaseComponent {\r\n    /**\r\n     * @param {HTMLElement} element\r\n     */\r\n    constructor(element) {\r\n        utils.checkForbiddenOverrides(DcBaseComponent, this, ['getElement', 'getNamespace', 'init', 'addListener']);\r\n\r\n        /**\r\n         * Root element of the component\r\n         * @type {HTMLElement}\r\n         */\r\n        this.element = element;\r\n\r\n        /**\r\n         * Shows whether of not the component is destroyed\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._isDestroyed = false;\r\n\r\n        /**\r\n         * Stores DOM events listeners which is created via {@link DcBaseComponent#addListener}\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        this._listenersList = [];\r\n\r\n        /**\r\n         * A string to identify current component instance and distinguish its refs and DOM elements\r\n         * Must be present in case of nested tabs/accordions\r\n         * @type {?string}\r\n         * @private\r\n         */\r\n        this._id = dcDom.getElementId(element, this.getNamespace());\r\n\r\n        /**\r\n         * Store an object with any data/settings which is provided by backend side\r\n         * @type {Object}\r\n         */\r\n        this.options = dcDom.getElementOptions(element, this.getNamespace());\r\n\r\n        /**\r\n         * @type {ReferencesCollection}\r\n         */\r\n        this.refs = dcDom.getElementRefs(element, this.getNamespace(), this._id);\r\n\r\n        this._checkRequiredRefs(this.refs);\r\n    }\r\n\r\n    /**\r\n     * TODO\r\n     * @return {string}\r\n     */\r\n    static getNamespace() {\r\n        throw new Error('Component must define its namespace');\r\n    }\r\n\r\n    /**\r\n     * Defines an array of DOM references\r\n     * without which an instance of the component will not be created\r\n     * @return {string[]}\r\n     */\r\n    static getRequiredRefs() {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * @see DcBaseComponent#element\r\n     * @return {HTMLElement}\r\n     */\r\n    getElement() {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Get component namespace in the dynamic context\r\n     * @see DcBaseComponent.getNamespace\r\n     * @return {string}\r\n     */\r\n    getNamespace() {\r\n        return this.constructor.getNamespace();\r\n    }\r\n\r\n    /**\r\n     * Check that all the required references exist in the DOM\r\n     * @param {ReferencesCollection} refs\r\n     * @private\r\n     */\r\n    _checkRequiredRefs(refs) {\r\n        this.constructor.getRequiredRefs().forEach((name) => {\r\n            if (!refs[name]) {\r\n                throw new Error(`the value of required ref ${name} is ${refs[name]}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    init() {\r\n        this.onInit();\r\n    }\r\n\r\n    onInit() {\r\n        // todo to define is onInit required on optional\r\n        throw new Error();\r\n    }\r\n\r\n    addListener(elem, eventName, eventCallback) {\r\n        if (!elem || typeof elem.addEventListener !== 'function') return;\r\n\r\n        elem.addEventListener(eventName, eventCallback);\r\n        this._listenersList.push({\r\n            elem,\r\n            eventName,\r\n            eventCallback\r\n        });\r\n    }\r\n\r\n    _removeAllListeners() {\r\n        this._listenersList.forEach((listener) => {\r\n            const { elem, eventName, eventCallback } = listener;\r\n            elem.removeEventListener(eventName, eventCallback);\r\n        });\r\n\r\n        this._listenersList = [];\r\n    }\r\n\r\n    destroy() {\r\n        if (this._isDestroyed === true) {\r\n            throw new Error('this instance has already been destroyed');\r\n        }\r\n        this._removeAllListeners();\r\n        this._isDestroyed = true;\r\n        this.onDestroy();\r\n    }\r\n\r\n    onDestroy() {\r\n    }\r\n\r\n    getChildAttribute(childNode, attributeName) {\r\n        const childId = dcDom.getParentId(childNode, this.getNamespace());\r\n        if (this._id !== childId) {\r\n            throw new Error('id attributes of child and parent don\\'t match');\r\n        }\r\n\r\n        return dcDom.getNamespacedAttributeValue(childNode, attributeName, this.getNamespace());\r\n    }\r\n\r\n    findChildrenWithAttribute(attributeName) {\r\n        return dcDom.findChildrenWithAttribute(this.element, attributeName, this.getNamespace(), this._id);\r\n    }\r\n}\r\n","import dcDom from './dc-dom';\r\n\r\n/**\r\n * @typedef {string} ComponentState\r\n * */\r\n\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst COMPONENT_STATE_NOT_INITED = 'not-inited';\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst COMPONENT_STATE_INITIALIZING = 'initializing';\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst COMPONENT_STATE_CREATED = 'created';\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst COMPONENT_STATE_ERROR = 'error';\r\n/**\r\n * @type {ComponentState}\r\n */\r\nconst COMPONENT_STATE_DESTROYED = 'destroyed';\r\n\r\nclass DcFactory {\r\n    constructor() {\r\n        /**\r\n         *\r\n         * @type {{componentClass: typeof DcBaseComponent, selector: string}[]}\r\n         * @private\r\n         */\r\n        this._registredComponents = [];\r\n\r\n        /**\r\n         *\r\n         * @type {WeakMap<HTMLElement, Map<typeof DcBaseComponent, ComponentState>>}\r\n         * @private\r\n         */\r\n        this._elementsComponents = new WeakMap();\r\n\r\n        /**\r\n         *\r\n         * @type {DcBaseComponent[]}\r\n         * @private\r\n         */\r\n        this._instances = [];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @param {Function|string} selector that indicates how we should search that component elements\r\n     */\r\n    register(componentClass, selector = null) {\r\n        this._registredComponents.push({\r\n            componentClass,\r\n            selector\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @return boolean\r\n     * @private\r\n     */\r\n    _isComponentCreatedOnElement(element, componentClass) {\r\n        const existedComponents = this._elementsComponents.get(element);\r\n        if (existedComponents) {\r\n            const state = existedComponents.get(componentClass);\r\n            return [COMPONENT_STATE_CREATED, COMPONENT_STATE_INITIALIZING].includes(state);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @return ComponentState\r\n     * @private\r\n     */\r\n    _getComponentStateOnElement(element, componentClass) {\r\n        const existedComponents = this._elementsComponents.get(element);\r\n        return (existedComponents && existedComponents.get(componentClass)) || COMPONENT_STATE_NOT_INITED;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @param {ComponentState} state\r\n     * @private\r\n     */\r\n    _setComponentStateOnElement(element, componentClass, state) {\r\n        let componentsMap = this._elementsComponents.get(element);\r\n\r\n        if (!componentsMap) {\r\n            componentsMap = new Map();\r\n            this._elementsComponents.set(element, componentsMap);\r\n        }\r\n        componentsMap.set(componentClass, state);\r\n    }\r\n\r\n    /**\r\n     * Starts the factory on a given root: finds and creates all registered components within the root\r\n     * @param {HTMLElement} root\r\n     */\r\n    init(root = document.body) {\r\n        this._registredComponents.forEach(({ componentClass, selector }) => {\r\n            this._initComponent(root, componentClass, selector);\r\n        });\r\n\r\n        if (process.env.NODE_ENV === 'development') {\r\n            // todo\r\n            // find components which are declared in html as data-dc-component-*\r\n            // but have no associated and registered components, throw warning\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLElement} root\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @param {Function|string} selector\r\n     * @private\r\n     */\r\n    _initComponent(root, componentClass, selector) {\r\n        try {\r\n            const elements = dcDom.findElementsForInit(root, componentClass.getNamespace(), selector);\r\n            if (elements.length > 0) {\r\n                elements.forEach((element) => {\r\n                    this._initComponentOnElement(element, componentClass);\r\n                });\r\n            }\r\n        } catch (e) {\r\n            // ignore current config error and move to the next one\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Init component class on elements\r\n     * @param {HTMLElement} element\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @private\r\n     */\r\n    _initComponentOnElement(element, componentClass) {\r\n        if (!this._isComponentCreatedOnElement(element, componentClass)) {\r\n            this._setComponentStateOnElement(element, componentClass, COMPONENT_STATE_INITIALIZING);\r\n            // TODO consider more sophisticated optimization technique\r\n            setTimeout(() => {\r\n                try {\r\n                    const instance = this._createComponentOnElement(componentClass, element);\r\n                    this._onComponentCreated(instance, componentClass);\r\n                } catch (error) {\r\n                    this._onComponentCreationError(error, element, componentClass);\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DcBaseComponent} instance\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @private\r\n     */\r\n    _onComponentCreated(instance, componentClass) {\r\n        this._setComponentStateOnElement(instance.getElement(), componentClass, COMPONENT_STATE_CREATED);\r\n        this._instances = [...this._instances, instance];\r\n        instance.init();\r\n    }\r\n\r\n\r\n    /**\r\n     * @param {Error} error\r\n     * @param {HTMLElement} element\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @private\r\n     */\r\n    _onComponentCreationError(error, element, componentClass) {\r\n        this._setComponentStateOnElement(element, componentClass, COMPONENT_STATE_ERROR);\r\n        console.error(`Component ${componentClass.name} hasn't been created due to error: ${error.message}`, element);\r\n        console.error(error);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @param {HTMLElement} element\r\n     * @return {DcBaseComponent}\r\n     * @private\r\n     */\r\n    _createComponentOnElement(componentClass, element) {\r\n        const componentStateOnElement = this._getComponentStateOnElement(element, componentClass);\r\n\r\n        switch (componentStateOnElement) {\r\n            case COMPONENT_STATE_CREATED:\r\n                throw new Error('Component of this class has already been created on this element');\r\n            default:\r\n                return new componentClass(element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy all previously registered components within the passed element\r\n     * @param {HTMLElement} root\r\n     */\r\n    destroy(root) {\r\n        this._instances = this._instances.filter((instance) => {\r\n            if (instance.element === root || root.contains(instance.element)) {\r\n                this._destroyComponent(instance);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DcBaseComponent} component\r\n     * @private\r\n     */\r\n    _destroyComponent(component) {\r\n        this._setComponentStateOnElement(component.getElement(), component.constructor, COMPONENT_STATE_DESTROYED);\r\n        component.destroy();\r\n    }\r\n\r\n    /**\r\n     * Returns all components of componentClass which are contained within the passed element\r\n     * @param {HTMLElement} element\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @return DcBaseComponent[]\r\n     */\r\n    getChildComponents(element, componentClass) {\r\n        return this._instances.filter((instance) => element.contains(instance.getElement()) && instance instanceof componentClass);\r\n    }\r\n\r\n    /**\r\n     * Returns first found component of componentClass which is contained within the passed element\r\n     * @param {HTMLElement} element\r\n     * @param {typeof DcBaseComponent} componentClass\r\n     * @return DcBaseComponent\r\n     */\r\n    getChildComponent(element, componentClass) {\r\n        return this.getChildComponents(element, componentClass)[0];\r\n    }\r\n\r\n    /**\r\n     * Returns all existing components on the passed element. Just for debugging purpose!\r\n     * @param {HTMLElement} element\r\n     * @return DcBaseComponent[]\r\n     */\r\n    debug(element) {\r\n        return this._instances.filter((instance) => instance.getElement() === element);\r\n    }\r\n}\r\n\r\n\r\nconst dcFactory = new DcFactory();\r\nexport default dcFactory;\r\n","import DcBaseComponent from './src/dc-base-component';\r\nimport dcFactory from './src/dc-factory';\r\nimport dcDom from './src/dc-dom';\r\n\r\nexport {\r\n    DcBaseComponent,\r\n    dcFactory,\r\n    dcDom\r\n}"],"sourceRoot":""}